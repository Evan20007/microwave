let microwave;  // vector rotate 

function setup() {
    createCanvas(800, 400); // Increased canvas width
    microwave = new Microwave();
}

function draw() {
    background(220);
    microwave.display();
    microwave.update();
}

class Microwave {
    constructor() {
        this.timer = 0;
        this.isRunning = false;
        this.isDoorOpen = false;
        this.foodInMicrowave = null; // Change to hold the type of food
        this.inputTimer = createInput('');
        this.inputTimer.position(150, 350);
        this.inputTimer.size(50);
        this.inputTimer.attribute('placeholder', 'Set Time (s)');
        this.turntableAngle = 0;
        this.timerFinished = false;
        this.foodTypes = ['Pizza', 'Popcorn', 'Soup', 'Vegetables', 'Rice']; // Different types of food
        this.selectedFoodIndex = 0; // Index of currently selected food
    }

    display() {
        this.drawMicrowave();
        if (this.foodInMicrowave) {
            this.drawFood();
        }
        this.drawButtons();
        this.drawFunctionButtons();
        this.showTimer();
        this.drawShelf(); // Draw the shelf
    }

    update() {
        if (this.isRunning) {
            this.timer--;
            this.turntableAngle += 0.1;
            if (this.timer <= 0) {
                this.stopMicrowave();
                this.foodInMicrowave = null; // Reset food in microwave
                this.timerFinished = true;
                console.log("Cooking finished.");
            }
        }
     }
	 drawMicrowave() {
        fill(150);
        rect(50, 50, 400, 250); // Microwave body

        // Door
        if (this.isDoorOpen) {
            fill(100);
            rect(50, 50, 10, 250); // Left part of the door
            fill(150);
            rect(440, 50, 10, 250); // Right part of the door
        } else {
            fill(100);
            rect(50, 50, 400, 250); // Full door closed
        }

        // Window
        fill(0, 0, 100, 100);
        rect(60, 60, 380, 180); // Microwave window

        // Door handle (hidden when door is open)
        if (!this.isDoorOpen) {
            fill(200);
            rect(400, 120, 10, 50); // Handle on the door
        }
   
	 }
	drawFood() {
		push();
		translate(250,175); // Ajust position for bigger microwave
		rotate(this.turntableAngle);
		fill(255);
		ellipse(0, 0, 150, 10);
		fill(255,0,0);
		ellipse(0,0,30,30);
		textAlign(CENTER);
		fill(0);
		text(this.foodInMicrowave,0,5);
		pop();
		
	}
	showTimer(){
		fill(255);
		textSize(20);
	}
	
}

